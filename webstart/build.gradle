description = 'equal5 webstart distribution'
apply plugin: "base"

import org.apache.tools.ant.filters.ReplaceTokens

ext.dependentLib = file "$buildDir/dependent_lib";
ext.signedLib = file "$buildDir/signed_lib";
ext.dist = file "$buildDir/dist";
ext.keystoreFile = 'src/jnlp/keys/equal5.keys'
ext.alias = "equal5-webstart-key"

ext.env = System.getenv()

task makeDirs << {
    file(dependentLib).mkdirs()
    file(signedLib).mkdirs()
    file(dist).mkdirs()
}

task copyDeps(type: Copy, dependsOn: makeDirs) {
    from project(":equal5-gui").configurations.runtime.allArtifacts.files
    from project(":equal5-gui").configurations.runtime
    into dependentLib
    include '*.jar'
}

if (env.containsKey("signingPassword")) {
    task signAll(dependsOn: copyDeps) {

        ext.inputJars = files { file(dependentLib).listFiles() }
        ext.password = env["signingPassword"]

        inputs.file inputJars
        outputs.dir signedLib

        doLast {
            inputJars.each {
                ant.signjar(
                        destDir: signedLib,
                        alias: alias,
                        jar: it,
                        keystore: keystoreFile,
                        storepass: password,
                        preservelastmodified: 'true')
            }
        }
    }
} else {
    task signAll(type: Copy, dependsOn: copyDeps) {
        from dependentLib
        into signedLib
    }
}

task copyToDist(type: Copy, dependsOn: signAll) {
    from signedLib
    into dist
}

task generateJnlp(dependsOn: copyToDist) {
    ext.inputFile = file("src/jnlp/equal5.jnlp");
    ext.outputFile = file("$dist/equal5.jnlp");
    ext.jarsDir = dist
    ext.jarFiles = files { file(jarsDir).listFiles() }

    inputs.file { inputFile }
    outputs.file { outputFile }

    doLast {
        def props = new Properties()
        props.put("dependencies", jarFiles.collect {
            str -> "<jar href=\"$str.name\" />"
        }.join("\n\t"))

        copy {
            from inputFile
            into outputFile
            filter(ReplaceTokens, tokens: props)
        }
    }
}

task dist(type: Zip, dependsOn: generateJnlp) {
    baseName = "equal5"
    appendix = "jnlp"
    from dist
}


artifacts {
    archives dist
}
